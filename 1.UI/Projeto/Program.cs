// Criando um construtor para a aplica√ß√£o, 
// permitindo adicionar servi√ßos e configura√ß√µes.
var builder = WebApplication.CreateBuilder(args);

// Adicionando servi√ßos.
// Registra o MVC no projeto, permitindo que 
// sua aplica√ß√£o utilize Controllers e Views.
builder.Services.AddControllersWithViews();

var app = builder.Build();

// Configure the HTTP request pipeline.
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error");
    // O valor HSTS padr√£o √© 30 dias. Voc√™ pode querer mudar
    // isso para cen√°rios de produ√ß√£o, veja https://aka.ms/aspnetcore-hsts.
    app.UseHsts();
}


//     Middleware:
// üí° No ASP.NET Core, cada um desses passos √© um Middleware!
//     Eles processam a requisi√ß√£o e decidem se ela pode continuar ou se ser√° bloqueada.
app.UseHttpsRedirection();   // 1Ô∏è‚É£ Redireciona HTTP para HTTPS

app.UseRouting();            // 2Ô∏è‚É£ Define o sistema de rotas

app.UseAuthorization();      // 3Ô∏è‚É£ Controla permiss√µes de acesso, Agora podemos bloquear ou permitir acesso

app.MapStaticAssets();       // 4Ô∏è‚É£ Configura arquivos est√°ticos, esse Middleware carrega todos arquivos js e css.

app.MapControllerRoute(      // 5Ô∏è‚É£ Define a estrutura de URLs
    name: "default",
    pattern: "{controller=Login}/{action=Index}/{id?}")
    .WithStaticAssets();


app.Run();
